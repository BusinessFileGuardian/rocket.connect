version: "3.4"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_rocket_uploads: {}
  local_rocket_db: {}
  local_rocket_db_config: {}
  local_rocket_db_dump: {}
  local_waautomate_data: {}
  local_wppconnect_data: {}
  local_prometeus_data: {}
  nodemodules: {}

services:

  django:
    &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: rocket_connect_local_django
    container_name: django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
      #- ./.env
    ports:
      - "8000:8000"
    healthcheck:
      test: curl --fail http://localhost:8000
      interval: 30s
      timeout: 10s
      retries: 3

    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: rocket_connect_production_postgres
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: rocket_connect_local_docs
    container_name: docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./rocket_connect:/app/rocket_connect:z
    ports:
      - "7000:7000"
    command: /start-docs

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: rocket_connect_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    healthcheck:
      disable: true
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: rocket_connect_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    healthcheck:
      disable: true
    command: /start-celerybeat

  flower:
    <<: *django
    image: rocket_connect_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    healthcheck:
      test: curl --fail http://localhost:5555
      interval: 30s
      timeout: 10s
      retries: 3
    command: /start-flower

  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:4.4.2
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: on-failure
    volumes:
      - local_rocket_uploads:/app/uploads
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_PASS=admin
      - ADMIN_EMAIL=admin@example.com
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - OVERWRITE_SETTING_Accounts_TwoFactorAuthentication_Enforce_Password_Fallback=false
      - OVERWRITE_SETTING_SMTP_Host=mailhog
      - OVERWRITE_SETTING_SMTP_Port=1025
      - OVERWRITE_SETTING_From_Email=from@email.com
      - OVERWRITE_SETTING_API_Enable_Rate_Limiter=false
      - CREATE_TOKENS_FOR_USERS=true
      - OVERWRITE_SETTING_Accounts_SystemBlockedUsernameList=administrator,system,user
    depends_on:
      - mongo
    ports:
      - 3000:3000
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/info" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  webdav:
    image: bytemark/webdav
    volumes:
      - /tmp/web:/var/lib/dav
    environment:
      - AUTH_TYPE=Basic
      - USERNAME=alice
      - PASSWORD=secret1234
      - LOCATION=/webdav
    ports:
      - 8011:80

  mongo:
    image: mongo:4.4
    restart: on-failure
    ports:
      - 27017:27017
    volumes:
      - local_rocket_db:/data/db
      - local_rocket_db_config:/data/configdb
      - local_rocket_db_dump:/dump
    command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
    labels:
      - "traefik.enable=false"

  mongo-init-replica:
    image: mongo:4.4
    command: 'bash -c "for i in `seq 1 30`; do mongo mongo/rocketchat --eval
      \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host:
      ''localhost:27017'' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i
      times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"'
    depends_on:
      - mongo

  browser:
    image: browserless/chrome:1.48.0-chrome-stable
    hostname: browser
    ports:
      - "3010:3000"
    environment:
      CONNECTION_TIMEOUT: -1
      KEEP_ALIVE: 'true'
      WORKSPACE_EXPIRE_DAYS: 1
      ENABLE_CORS: 'true'
      CHROME_REFRESH_TIME: 86400000
      DEFAULT_BLOCK_ADS: 'true'
      FUNCTION_ENABLE_INCOGNITO_MODE: 'true'
      ENABLE_XVBF: 'true'
      CHROME_PATH: '/usr/bin/google-chrome'
      USE_CHROME_STABLE: 'true'
      NODE_ENV: 'production'

  waautomate:
    # waautomate options ar at  ./compose/local/waautomate/cli.config.json
    build:
      context: ./compose/local/waautomate
    command: npx @open-wa/wa-automate --ev
      "http://django.docker:8000/connector/CONNECTOR_EXTERNAL_TOKEN1/?ev=1"
      --no-kill-on-logout --api-host 'http://127.0.0.1:8081' --browserWSEndpoint
      'http://browser:3000' -w
      'http://django.docker:8000/connector/CONNECTOR_EXTERNAL_TOKEN1/'
      --sessionId waautomate1
    restart: unless-stopped
    volumes:
      - local_waautomate_data:/usr/src/app/session_data
      - ./compose/local/waautomate/instance1/cli.config.json:/usr/src/app/ccli.config.json
    links:
      - "django:django.docker"
    depends_on:
      - browser
    ports:
      - "8001:8002"

  wppconnect:
    image: wppconnect/server-cli:main
    # for command options: https://github.com/wppconnect-team/server-cli/blob/main/src/program.js
    command: wppserver --log-level DEBUG --secretKey My53cr3tKY --port 21465
      --startAllSession
      #--webhook-allUnreadOnStart
      #--no-webhook-onPresenceChanged
      #--no-webhook-onParticipantsChanged
      #--no-webhook-listenAcks
      #--archive-daysToArchive 30
    volumes:
      - local_wppconnect_data:/usr/src/server-cli/tokens
    ports:
      - "21465:21465"

  apache:
    image: 'php:apache'
    ports:
      - "80:80"
    volumes:
      - ./compose/local/apache/site:/var/www/html
      - ./compose/local/apache/confs/additional.conf:/etc/apache2/conf-enabled/additional.conf

  grafana:
    image: grafana/grafana:8.2.5
    ports:
      - 3001:3000
    volumes:
      - ./compose/local/rocket_metrics/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./compose/local/rocket_metrics/grafana/provisioning/dashboards/provider:/etc/grafana/provisioning/dashboards:ro
      - ./compose/local/rocket_metrics/grafana/provisioning/dashboards/json-exports:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus

  prometheus:
    image: quay.io/prometheus/prometheus:v2.31.1
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - '--storage.tsdb.retention.time=12w'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - local_prometeus_data:/prometheus
      - ./compose/local/rocket_metrics/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
